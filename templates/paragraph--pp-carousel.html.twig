{#
/**
 * @file
 * Bootstrap Paragraphs template for displaying a Carousel.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# Renders Slide Interval field. #}
{# Converts database values to classes supplied by template. #}
{% if content.bp_slide_interval|render %}
  {% set slide_interval = content.bp_slide_interval['#items'].getString() %}
  {% set slide_interval_classes = [
    'false' == slide_interval ? 'false',
    '1000' == slide_interval ? '1000',
    '2000' == slide_interval ? '2000',
    '3000' == slide_interval ? '3000',
    '4000' == slide_interval ? '4000',
    '5000' == slide_interval ? '5000',
    '6000' == slide_interval ? '6000',
    '7000' == slide_interval ? '7000',
  ]
  %}
{% endif %}

{# The template default set classes. #}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
'carousel',
'slide',
]
%}

{# Sets Unique ID for Carousel from Paragraph ID. #}
{% set paragraph_id = 'myCarousel-' ~ paragraph.id.value %}

{# Prints Carousel template. #}
<div{{ attributes.addClass(classes).setAttribute('id', paragraph_id).setAttribute('data-interval', slide_interval_classes).setAttribute('data-ride', 'carousel') }}>
  {{ title_suffix }}
  <div class="carousel-inner" role="list">
    {% for key, item in content.pp_slide_content if key|first != '#' %}
      <div class="paragraph--layout-slideshow__slide-{{ key + 1 }} item carousel-item{% if loop.first %} active{% endif %}" role="listitem">{{ item }}</div>
    {% endfor %}
  </div>
</div>
